javascript
const Hero = require('./game-models/Hero');
const Enemy = require('./game-models/Enemy');
const View = require('./View');

class Game {
  constructor({ trackLength }) {
    this.trackLength = trackLength;
    this.hero = new Hero(); // –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –±—É–º–µ—Ä–∞–Ω–≥ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    this.enemy = new Enemy();
    this.view = new View();
    this.track = [];
    this.regenerateTrack();
  }

  regenerateTrack() {
    // –°–±–æ—Ä–∫–∞ –≤—Å–µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ (–≥–µ—Ä–æ–π, –≤—Ä–∞–≥(–∏), –æ—Ä—É–∂–∏–µ) –≤ –µ–¥–∏–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    this.track = (new Array(this.trackLength)).fill(' ');
    this.track[this.hero.position] = this.hero.skin; // –ü–æ–º–µ—â–∞–µ–º –≥–µ—Ä–æ—è –Ω–∞ —Ç—Ä–µ–∫
    this.track[this.enemy.position] = this.enemy.skin; // –ü–æ–º–µ—â–∞–µ–º –≤—Ä–∞–≥–∞ –Ω–∞ —Ç—Ä–µ–∫
  }

  checkCollision() {
    if (this.hero.position === this.enemy.position) {
      this.hero.die();
      console.log(`${this.enemy.name} –ø–æ–±–µ–¥–∏–ª! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.`);
      clearInterval(this.gameInterval); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É
    }
  }

  updateGame() {
    this.checkCollision();
    this.regenerateTrack();
    this.view.render(this.track);
  }

  play() {
    this.gameInterval = setInterval(() => {
      this.updateGame();
    }, 1000); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä—É –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  }
}

module.exports = Game;


// –ë—É–º–µ—Ä–∞–Ω–≥ —è–≤–ª—è–µ—Ç—Å—è –æ—Ä—É–∂–∏–µ–º.
// –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –æ—Ä—É–∂–∏–µ.
// –¢–æ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Weapon –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º!

class Boomerang {
  constructor(trackLength) {
    this.skin = 'üåÄ';
    this.position = 0;
    this.trackLength = trackLength;
  }

  fly() {
    this.moveRight();
    this.moveLeft();
    const distance = 10; // –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –ø–æ–ª–µ—Ç–∞ –±—É–º–µ—Ä–∞–Ω–≥–∞

    for (let i = 0; i <= distance; i += 1) {
      setTimeout(() => moveRight(1), 30 * i); // –∑–∞–ø—É—Å–∫–∞–µ–º –±—É–º–µ—Ä–∞–Ω–≥ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
    }

    for (let i = 0; i <= distance; i += 1) {
      setTimeout(() => this.moveLeft(1), 30 * (distance + 1)); // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±—É–º–µ—Ä–∞–Ω–≥ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
    }

    setTimeout(() => this.reset(), 30 * (distance * 2)); // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –±—É–º–µ—Ä–∞–Ω–≥–∞ –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è

  }


  reset() {
    this.position = -1; // —Å–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–∏ –±—É–º–µ—Ä–∞–Ω–≥–∞
  }
  
  moveLeft() {
    // –ò–¥—ë–º –≤–ª–µ–≤–æ.
    this.position -= 1;
    this.position -= distance;
  }

  moveRight() {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position += 1;
    this.position += distance;
  }
}

module.exports = Boomerang;



